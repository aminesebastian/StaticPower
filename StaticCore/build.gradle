buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.minecraftforge.net' }	
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle' 


// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
	// Create the library configuration, where our non-mod libraries will be added to
	library
	// Any dependency in the library configuration will also be added to the implementation configuration
	implementation.extendsFrom library
}

minecraft.runs.all {
	lazyToken('minecraft_classpath') {
		configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
	}
}

dependencies {
	// SQL driver
	library ('org.xerial:sqlite-jdbc:3.39.3.0') {
        transitive = false
    }
}

repositories {
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven { 
		url 'https://oss.sonatype.org/content/repositories/snapshots' 
	}
}

jar {
	archiveClassifier = 'slim'
    manifest {
        attributes([
			"Specification-Title"     : "staticcore",
			"Specification-Vendor"    : "theking530",
			"Specification-Version"   : "1", // We are version 1 of ourselves
			"Implementation-Title"    : project.name,
			"Implementation-Version"  : project.jar.archiveVersion,
			"Implementation-Vendor"   : "theking530",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
   archiveFileName = jar.archiveFileName
   configurations = [project.configurations.library]
   relocate 'org.xerial:sqlite-jdbc', "${project.group}.relocated.sqlite-jdbc"
   finalizedBy 'reobfShadowJar'
}


task deobfJar(type: Jar, dependsOn: 'jar') {
    from "build/source/main"
    classifier "dev"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

build.dependsOn sourcesJar
jar.finalizedBy('reobfJar')

artifacts {
	archives deobfJar
	archives sourcesJar
}

reobf {
    shadowJar {}
}

jar.dependsOn("shadowJar")